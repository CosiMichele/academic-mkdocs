{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"blog/","text":"","title":"Blog Posts"},{"location":"guide/","text":"","title":"Guide"},{"location":"home/","text":"academicpages is a ready-to-fork GitHub Pages template for academic personal websites This is the front page of a website that is powered by the academicpages template and hosted on GitHub pages. GitHub pages is a free service in which websites are built and hosted from code and data stored in a GitHub repository, automatically updating when a new commit is made to the respository. This template was forked from the Minimal Mistakes Jekyll Theme created by Michael Rose, and then extended to support the kinds of content that academics have: publications, talks, teaching, a portfolio, blog posts, and a dynamically-generated CV. You can fork this repository right now, modify the configuration and markdown files, add your own PDFs and other content, and have your own site for free, with no ads! An older version of this template powers my own personal website at stuartgeiger.com, which uses this Github repository. A data-driven personal website Like many other Jekyll-based GitHub Pages templates, academicpages makes you separate the website\u2019s content from its form. The content & metadata of your website are in structured markdown files, while various other files constitute the theme, specifying how to transform that content & metadata into HTML pages. You keep these various markdown (.md), YAML (.yml), HTML, and CSS files in a public GitHub repository. Each time you commit and push an update to the repository, the GitHub pages service creates static HTML pages based on these files, which are hosted on GitHub\u2019s servers free of charge. Many of the features of dynamic content management systems (like Wordpress) can be achieved in this fashion, using a fraction of the computational resources and with far less vulnerability to hacking and DDoSing. You can also modify the theme to your heart\u2019s content without touching the content of your site. If you get to a point where you\u2019ve broken something in Jekyll/HTML/CSS beyond repair, your markdown files describing your talks, publications, etc. are safe. You can rollback the changes or even delete the repository and start over \u2013 just be sure to save the markdown files! Finally, you can also write scripts that process the structured data on the site, such as this one that analyzes metadata in pages about talks to display a map of every location you\u2019ve given a talk. Getting started Register a GitHub account if you don\u2019t have one and confirm your e-mail (required!) Fork this repository by clicking the \u201cfork\u201d button in the top right. Go to the repository\u2019s settings (rightmost item in the tabs that start with \u201cCode\u201d, should be below \u201cUnwatch\u201d). Rename the repository \u201c[your GitHub username].github.io\u201d, which will also be your website\u2019s URL. Set site-wide configuration and create content & metadata (see below \u2013 also see this set of diffs showing what files were changed to set up an example site for a user with the username \u201cgetorg-testacct\u201d) Upload any files (like PDFs, .zip files, etc.) to the files/ directory. They will appear at https://[your GitHub username].github.io/files/example.pdf. Check status by going to the repository settings, in the \u201cGitHub pages\u201d section Site-wide configuration The main configuration file for the site is in the base directory in _config.yml, which defines the content in the sidebars and other site-wide features. You will need to replace the default variables with ones about yourself and your site\u2019s github repository. The configuration file for the top menu is in _data/navigation.yml. For example, if you don\u2019t have a portfolio or blog posts, you can remove those items from that navigation.yml file to remove them from the header. Create content & metadata For site content, there is one markdown file for each type of content, which are stored in directories like _publications, _talks, _posts, _teaching, or _pages. For example, each talk is a markdown file in the _talks directory. At the top of each markdown file is structured data in YAML about the talk, which the theme will parse to do lots of cool stuff. The same structured data about a talk is used to generate the list of talks on the Talks page, each individual page for specific talks, the talks section for the CV page, and the map of places you\u2019ve given a talk (if you run this python file or Jupyter notebook, which creates the HTML for the map based on the contents of the _talks directory). Markdown generator I have also created a set of Jupyter notebooks that converts a CSV containing structured data about talks or presentations into individual markdown files that will be properly formatted for the academicpages template. The sample CSVs in that directory are the ones I used to create my own personal website at stuartgeiger.com. My usual workflow is that I keep a spreadsheet of my publications and talks, then run the code in these notebooks to generate the markdown files, then commit and push them to the GitHub repository. How to edit your site\u2019s GitHub repository Many people use a git client to create files on their local computer and then push them to GitHub\u2019s servers. If you are not familiar with git, you can directly edit these configuration and markdown files directly in the github.com interface. Navigate to a file (like this one and click the pencil icon in the top right of the content preview (to the right of the \u201cRaw | Blame | History\u201d buttons). You can delete a file by clicking the trashcan icon to the right of the pencil icon. You can also create new files or upload files by navigating to a directory and clicking the \u201cCreate new file\u201d or \u201cUpload files\u201d buttons.","title":"Home"},{"location":"portfolio/","text":"","title":"Portfolio"},{"location":"pubs/","text":"Paper Title Number 3 Published in Journal 1, 2015 This paper is about the number 3. The number 4 is left for future work. Recommended citation: Your Name, You. (2015). \"Paper Title Number 3.\" Journal 1. 1(3). http://academicpages.github.io/files/paper3.pdf Paper Title Number 2 Published in Journal 1, 2010 This paper is about the number 2. The number 3 is left for future work. Recommended citation: Your Name, You. (2010). \"Paper Title Number 2.\" Journal 1. 1(2). http://academicpages.github.io/files/paper2.pdf Paper Title Number 1 Published in Journal 1, 2009 This paper is about the number 1. The number 2 is left for future work. Recommended citation: Your Name, You. (2009). \"Paper Title Number 1.\" Journal 1. 1(1). http://academicpages.github.io/files/paper1.pdf","title":"Publications"},{"location":"talks/","text":"","title":"Talks"},{"location":"teaching/","text":"","title":"Teaching"}]}